mode: sequential

length: [10, 20]

splits:
  train: {path: "data/train", samples: 160}
  val:   {path: "data/train", samples: 20}
  test:  {path: "data/test", samples: 20}


minizinc_prefix: |
  include "increasing.mzn";

predicates:
  "p(A,B,C)": "increasing([A,B,C])"
  "q(A,B)": "A < B"

formula: "F p(X,Y,Z) & (q(X,Y) <-> WX q(X,Z)) U p(X,Y,Z)"

types:
  cifar_t:
    airplane: "cifar10/airplane"
    automobile: "cifar10/automobile"
    bird: "cifar10/bird"
    cat: "cifar10/cat"
    deer: "cifar10/deer"
    dog: "cifar10/dog"
    frog: "cifar10/frog"
    horse: "cifar10/horse"
    ship: "cifar10/ship"
    truck: "cifar10/truck"


domains:
  X: cifar_t
  Y: cifar_t
  Z: cifar_t

streams:
  X: x
  Y: y
  Z: z

avoid_states:
  absorbing_accepting: { "linear": 0.01 }
  absorbing_rejecting: { "linear": 0.01 }
  self_loops: { "linear": 0.1 }

truncate_on_absorbing:
  accepting: False
  rejecting: False

seed: 12345
patience: 1000


